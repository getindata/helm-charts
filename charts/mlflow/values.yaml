replicaCount: 1

image:
  repository: gcr.io/getindata-images-public/mlflow-gcp
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion
  tag: ""

persistence:
  # -- Specifies where artifacts are recorded, can be S3, GCS or local filepath.
  defaultArtifactRoot: file:/mlflow/artifacts

  # -- Specifies where experiments metadata is recorded, can be either local file path
  # (specified as file:/my/local/dir), where data is just directly stored locally or
  # a database encoded as dialect+driver://username:password@host:port/database.
  # MLflow supports the dialects mysql, mssql, sqlite, and postgresql.
  # For more details, see SQLAlchemy database uri.
  backendStoreUri: file:/mlflow/mlruns

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # -- serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # -- serviceAccount.name -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name:

podAnnotations: {}

podSecurityContext: {}
  # -- fsGroup: 2000

securityContext: {}
  # -- capabilities:
  #   drop:
  #    - ALL
  #  readOnlyRootFilesystem: true
  #  runAsNonRoot: true
  #  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # -- kubernetes.io/ingress.class: nginx
    # -- kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  # -- - secretName: chart-example-tls
  #   hosts:
  #      - chart-example.local

resources: {}
  # -- We usually recommend not to specify default resources and to leave this as a conscious
  #  choice for the user. This also increases chances charts run on environments with little
  #  resources, such as Minikube. If you do want to specify resources, uncomment the following
  #  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # -- targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
